name: Deploy with OIDC

on:
  push:
    branches:
      - main
      - staging
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      REGION: us-west-2
      STAGING_INSTANCE_ID: i-0d0b2c617167e9607
      PROD_INSTANCE_ID: i-08bf95ea553803bd9

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::746669201556:role/githubactions
          role-session-name: github-${{ github.actor }}-${{ github.ref_name }}-${{ github.run_id }}
          aws-region: ${{ env.REGION }}

      - name: Determine environment (main or staging)
        id: env
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "env=prod" >> "$GITHUB_OUTPUT"
            echo "instance_id=${{ env.PROD_INSTANCE_ID }}" >> "$GITHUB_OUTPUT"
          else
            echo "env=stage" >> "$GITHUB_OUTPUT"
            echo "instance_id=${{ env.STAGING_INSTANCE_ID }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Trigger EC2 Deploy Script via SSM
        id: ssm
        run: |
          COMMAND_ID=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-ids "${{ steps.env.outputs.instance_id }}" \
            --comment "GitHub OIDC Deploy" \
            --parameters commands=["/home/ec2-user/deploy.sh ${{ steps.env.outputs.env }}"] \
            --region "${{ env.REGION }}" \
            --query "Command.CommandId" \
            --output text)

          echo "command_id=$COMMAND_ID"
          echo "command_id=$COMMAND_ID" >> $GITHUB_ENV

      - name: Wait and Print Output from EC2
        run: |
          sleep 10
          aws ssm get-command-invocation \
            --command-id "$command_id" \
            --instance-id "${{ steps.env.outputs.instance_id }}" \
            --region "${{ env.REGION }}"
