{
  "get": {
    "summary": "Get file details by path",
    "description": "Fetches the details of a file by its path. Authorization bearer token is required in the header.",
    "operationId": "getFileDetails",
    "tags": ["File"],
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "parameters": [
      {
        "name": "path",
        "in": "query",
        "required": true,
        "description": "Path of the file to fetch",
        "schema": {
          "type": "string",
          "example": "uploads/sample.pdf"
        }
      }
    ],
    "responses": {
      "200": {
        "description": "File details fetched successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "OK" },
                "statusCode": { "type": "integer", "example": 200 },
                "response": { "type": "boolean", "example": true },
                "message": {
                  "type": "string",
                  "example": "File details fetched successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "path": {
                          "type": "string",
                          "example": "/uploads/sample.pdf"
                        },
                        "size": { "type": "integer", "example": 102400 },
                        "mimetype": {
                          "type": "string",
                          "example": "application/pdf"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2025-01-01T12:00:00Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2025-01-02T12:00:00Z"
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "success-example": {
                "summary": "A successful file details example response",
                "value": {
                  "name": "OK",
                  "statusCode": 200,
                  "response": true,
                  "message": "File details fetched successfully",
                  "data": {
                    "file": {
                      "id": 1,
                      "path": "/uploads/sample.pdf",
                      "size": 102400,
                      "mimetype": "application/pdf",
                      "createdAt": "2025-01-01T12:00:00Z",
                      "updatedAt": "2025-01-02T12:00:00Z"
                    }
                  }
                }
              },
              "file-not-found-example": {
                "summary": "A successful response but file not found",
                "value": {
                  "name": "OK",
                  "statusCode": 200,
                  "response": true,
                  "message": "File not found",
                  "data": null
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized, invalid or missing token",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "UnauthorizedError" },
                "response": { "type": "boolean", "example": false },
                "message": { "type": "string", "example": "Unauthorized" },
                "statusCode": { "type": "integer", "example": 401 },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Unauthorized"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "unauthorized-error-example": {
                "summary": "Unauthorized error response",
                "value": {
                  "name": "UnauthorizedError",
                  "response": false,
                  "message": "Unauthorized",
                  "statusCode": 401,
                  "errors": [{ "message": "Unauthorized" }]
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Forbidden, user does not have necessary permissions",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "ForbiddenError" },
                "response": { "type": "boolean", "example": false },
                "message": { "type": "string", "example": "Forbidden" },
                "statusCode": { "type": "integer", "example": 403 },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string", "example": "Forbidden" }
                    }
                  }
                }
              }
            },
            "examples": {
              "forbidden-error-example": {
                "summary": "Forbidden error response",
                "value": {
                  "name": "ForbiddenError",
                  "response": false,
                  "message": "Forbidden",
                  "statusCode": 403,
                  "errors": [{ "message": "Forbidden" }]
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found, the requested file does not exist",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "NotFoundError" },
                "response": { "type": "boolean", "example": false },
                "message": { "type": "string", "example": "File Not Found" },
                "statusCode": { "type": "integer", "example": 404 },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "File Not Found"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "not-found-error-example": {
                "summary": "File Not Found error response",
                "value": {
                  "name": "NotFoundError",
                  "response": false,
                  "message": "File Not Found",
                  "statusCode": 404,
                  "errors": [{ "message": "File Not Found" }]
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "response": { "type": "boolean", "example": false },
                "name": { "type": "string", "example": "InternalServerError" },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                },
                "statusCode": { "type": "integer", "example": 500 },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Internal server error"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "internal-server-error-example": {
                "summary": "Internal server error",
                "value": {
                  "name": "InternalServerError",
                  "response": false,
                  "message": "Internal server error",
                  "statusCode": 500,
                  "errors": [{ "message": "Internal server error" }]
                }
              }
            }
          }
        }
      }
    }
  }
}
