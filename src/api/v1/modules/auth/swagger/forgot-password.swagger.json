{
  "/auth/forgot-password": {
    "post": {
      "summary": "Forgot password",
      "description": "Initiates the forgot password process by sending a password reset token to the provided email address.",
      "operationId": "forgotPassword",
      "tags": ["Auth"],
      "requestBody": {
        "description": "Email required to initiate the password reset process",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string", "example": "jane.doe@example.com" }
              },
              "required": ["email"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Password reset token sent successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "OK" },
                  "statusCode": { "type": "integer", "example": 200 },
                  "response": { "type": "boolean", "example": true },
                  "message": {
                    "type": "string",
                    "example": "Send password token to your email successfully"
                  }
                }
              },
              "examples": {
                "success-example": {
                  "summary": "A successful password reset email response",
                  "value": {
                    "name": "OK",
                    "statusCode": 200,
                    "response": true,
                    "message": "Send password token to your email successfully"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request, invalid input",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "InvalidRequestParametersError"
                  },
                  "response": { "type": "boolean", "example": false },
                  "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                  },
                  "statusCode": { "type": "integer", "example": 400 },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Invalid email"
                        },
                        "field": { "type": "string", "example": "email" },
                        "location": { "type": "string", "example": "body" }
                      }
                    }
                  }
                }
              },
              "examples": {
                "invalid-input-error-example": {
                  "summary": "Invalid input example response",
                  "value": {
                    "name": "InvalidRequestParametersError",
                    "response": false,
                    "message": "Invalid request parameters",
                    "statusCode": 400,
                    "errors": [
                      {
                        "message": "Invalid email",
                        "field": "email",
                        "location": "body"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "User not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "response": { "type": "boolean", "example": false },
                  "name": { "type": "string", "example": "NotFoundError" },
                  "message": { "type": "string", "example": "Not found" },
                  "statusCode": { "type": "integer", "example": 404 },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "User not found"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "not-found-error-example": {
                  "summary": "User not found example response",
                  "value": {
                    "name": "NotFoundError",
                    "response": false,
                    "message": "Not found",
                    "statusCode": 404,
                    "errors": [
                      {
                        "message": "User not found"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "response": { "type": "boolean", "example": false },
                  "name": {
                    "type": "string",
                    "example": "InternalServerError"
                  },
                  "message": {
                    "type": "string",
                    "example": "Internal server error"
                  },
                  "statusCode": { "type": "integer", "example": 500 },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Internal server error"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "internal-server-error-example": {
                  "summary": "Internal server error",
                  "value": {
                    "name": "InternalServerError",
                    "response": false,
                    "message": "Internal server error",
                    "statusCode": 500,
                    "errors": [
                      {
                        "message": "Internal server error"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
