{
  "/auth/change-password": {
    "put": {
      "summary": "Change password",
      "description": "Allows authenticated users to change their password by providing the current password and a new password.",
      "operationId": "changePassword",
      "tags": ["Auth"],
      "security": [
        {
          "bearerAuth": []
        }
      ],
      "requestBody": {
        "description": "Current and new passwords are required to change the password",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "oldPassword": {
                  "type": "string",
                  "example": "OldPassword@123"
                },
                "newPassword": {
                  "type": "string",
                  "example": "NewPassword@456"
                }
              },
              "required": ["oldPassword", "newPassword"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Password changed successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "OK" },
                  "statusCode": { "type": "integer", "example": 200 },
                  "response": { "type": "boolean", "example": true },
                  "message": {
                    "type": "string",
                    "example": "Password changed successfully"
                  }
                }
              },
              "examples": {
                "success-example": {
                  "summary": "A successful password change response",
                  "value": {
                    "name": "OK",
                    "statusCode": 200,
                    "response": true,
                    "message": "Password changed successfully"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Bad request, invalid input",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "InvalidRequestParametersError"
                  },
                  "response": { "type": "boolean", "example": false },
                  "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                  },
                  "statusCode": { "type": "integer", "example": 400 },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Old password is required"
                        },
                        "field": { "type": "string", "example": "oldPassword" },
                        "location": { "type": "string", "example": "body" }
                      }
                    }
                  }
                }
              },
              "examples": {
                "invalid-input-error-example": {
                  "summary": "Invalid input example response",
                  "value": {
                    "name": "InvalidRequestParametersError",
                    "response": false,
                    "message": "Invalid request parameters",
                    "statusCode": 400,
                    "errors": [
                      {
                        "message": "Old password is required",
                        "field": "oldPassword",
                        "location": "body"
                      },
                      {
                        "message": "New password is required",
                        "field": "newPassword",
                        "location": "body"
                      }
                    ]
                  }
                },
                "incorrect-input-error-example": {
                  "summary": "Invalid input example response",
                  "value": {
                    "name": "InvalidRequestParametersError",
                    "response": false,
                    "message": "Invalid request parameters",
                    "statusCode": 400,
                    "errors": [
                      {
                        "message": "New password should be between 6 to 64 characters long",
                        "field": "newPassword",
                        "location": "body"
                      }
                    ]
                  }
                },
                "passing-old-password-error-example": {
                  "summary": "Passing old password example response",
                  "value": {
                    "name": "BadRequestError",
                    "response": false,
                    "message": "Bad request",
                    "statusCode": 400,
                    "errors": [
                      {
                        "message": "You are providing old password"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized, invalid or missing token",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "UnauthorizedError" },
                  "response": { "type": "boolean", "example": false },
                  "message": {
                    "type": "string",
                    "example": "Unauthorized"
                  },
                  "statusCode": { "type": "integer", "example": 401 },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "unauthorized-error-example": {
                  "summary": "Unauthorized error response",
                  "value": {
                    "name": "UnauthorizedError",
                    "response": false,
                    "message": "Unauthorized",
                    "statusCode": 401,
                    "errors": [
                      {
                        "message": "Unauthorized"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "response": { "type": "boolean", "example": false },
                  "name": {
                    "type": "string",
                    "example": "InternalServerError"
                  },
                  "message": {
                    "type": "string",
                    "example": "Internal server error"
                  },
                  "statusCode": { "type": "integer", "example": 500 },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Internal server error"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "internal-server-error-example": {
                  "summary": "Internal server error",
                  "value": {
                    "name": "InternalServerError",
                    "response": false,
                    "message": "Internal server error",
                    "statusCode": 500,
                    "errors": [
                      {
                        "message": "Internal server error"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
