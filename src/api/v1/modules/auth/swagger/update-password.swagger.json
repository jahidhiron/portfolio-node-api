{
  "put": {
    "summary": "Update password",
    "description": "Allows Admin and associated Brand Manager can change user password by providing the new password.",
    "operationId": "updatePassword",
    "tags": ["Auth"],
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Id of the user to fetch",
        "schema": {
          "type": "integer",
          "example": 1
        }
      }
    ],
    "requestBody": {
      "description": "New passwords are required to change the password",
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "password": {
                "type": "string",
                "example": "password@123"
              }
            },
            "required": ["password"]
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Password changed successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "OK" },
                "statusCode": { "type": "integer", "example": 200 },
                "response": { "type": "boolean", "example": true },
                "message": {
                  "type": "string",
                  "example": "User password updated successfully"
                }
              }
            },
            "examples": {
              "success-example": {
                "summary": "A successful password change response",
                "value": {
                  "name": "OK",
                  "statusCode": 200,
                  "response": true,
                  "message": "User password updated successfully"
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Bad request, invalid input",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "InvalidRequestParametersError"
                },
                "response": { "type": "boolean", "example": false },
                "message": {
                  "type": "string",
                  "example": "Invalid request parameters"
                },
                "statusCode": { "type": "integer", "example": 400 },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Password is required"
                      },
                      "field": { "type": "string", "example": "Password" },
                      "location": { "type": "string", "example": "body" }
                    }
                  }
                }
              }
            },
            "examples": {
              "invalid-input-error-example": {
                "summary": "Invalid input example response",
                "value": {
                  "name": "InvalidRequestParametersError",
                  "response": false,
                  "message": "Invalid request parameters",
                  "statusCode": 400,
                  "errors": [
                    {
                      "message": "Password is required",
                      "field": "password",
                      "location": "body"
                    }
                  ]
                }
              },
              "incorrect-input-error-example": {
                "summary": "Invalid input example response",
                "value": {
                  "name": "InvalidRequestParametersError",
                  "response": false,
                  "message": "Invalid request parameters",
                  "statusCode": 400,
                  "errors": [
                    {
                      "message": "Password should be between 6 to 64 characters long",
                      "field": "password",
                      "location": "body"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized, invalid or missing token",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "UnauthorizedError" },
                "response": { "type": "boolean", "example": false },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": { "type": "integer", "example": 401 },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Unauthorized"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "unauthorized-error-example": {
                "summary": "Unauthorized error response",
                "value": {
                  "name": "UnauthorizedError",
                  "response": false,
                  "message": "Unauthorized",
                  "statusCode": 401,
                  "errors": [
                    {
                      "message": "Unauthorized"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "response": { "type": "boolean", "example": false },
                "name": {
                  "type": "string",
                  "example": "InternalServerError"
                },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                },
                "statusCode": { "type": "integer", "example": 500 },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Internal server error"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "internal-server-error-example": {
                "summary": "Internal server error",
                "value": {
                  "name": "InternalServerError",
                  "response": false,
                  "message": "Internal server error",
                  "statusCode": 500,
                  "errors": [
                    {
                      "message": "Internal server error"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}
