{
  "/auth/refresh-token": {
    "get": {
      "summary": "Generate refresh token",
      "description": "Generates new access and refresh token using a valid refresh token. Authorization bearer token is required in the header.",
      "operationId": "generateRefreshToken",
      "tags": ["Auth"],
      "security": [
        {
          "bearerAuth": []
        }
      ],
      "responses": {
        "200": {
          "description": "New access token generated successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "OK" },
                  "statusCode": { "type": "integer", "example": 200 },
                  "response": { "type": "boolean", "example": true },
                  "message": {
                    "type": "string",
                    "example": "Generate refresh token successfully"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "tokens": {
                        "type": "object",
                        "properties": {
                          "accessToken": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                          },
                          "refreshToken": {
                            "type": "string",
                            "example": "SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "success-example": {
                  "summary": "A successful token generation response",
                  "value": {
                    "name": "OK",
                    "statusCode": 200,
                    "response": true,
                    "message": "Generate refresh token successfully",
                    "data": {
                      "tokens": {
                        "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                        "refreshToken": "SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized, invalid or missing token",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "UnauthorizedError" },
                  "response": { "type": "boolean", "example": false },
                  "message": {
                    "type": "string",
                    "example": "Unauthorized"
                  },
                  "statusCode": { "type": "integer", "example": 401 },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Unauthorized"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "unauthorized-error-example": {
                  "summary": "Unauthorized error response",
                  "value": {
                    "name": "UnauthorizedError",
                    "response": false,
                    "message": "Unauthorized",
                    "statusCode": 401,
                    "errors": [
                      {
                        "message": "Unauthorized"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "response": { "type": "boolean", "example": false },
                  "name": {
                    "type": "string",
                    "example": "InternalServerError"
                  },
                  "message": {
                    "type": "string",
                    "example": "Internal server error"
                  },
                  "statusCode": { "type": "integer", "example": 500 },
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Internal server error"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "internal-server-error-example": {
                  "summary": "Internal server error",
                  "value": {
                    "name": "InternalServerError",
                    "response": false,
                    "message": "Internal server error",
                    "statusCode": 500,
                    "errors": [
                      {
                        "message": "Internal server error"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
