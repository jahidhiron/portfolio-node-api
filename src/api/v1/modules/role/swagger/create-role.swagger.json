{
  "post": {
    "summary": "Create a new role",
    "description": "Creates a new role with the provided name.",
    "operationId": "createRole",
    "tags": ["Role"],
    "requestBody": {
      "description": "Role data required for creation",
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "example": "Admin" },
              "description": { "type": "string", "example": "Description" }
            },
            "required": ["name"]
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "Role created successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Created" },
                "statusCode": { "type": "integer", "example": 201 },
                "response": { "type": "boolean", "example": true },
                "message": {
                  "type": "string",
                  "example": "Role created successfully"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "role": { "$ref": "#/components/schemas/Role" }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Bad request, invalid input",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "InvalidRoleParametersError"
                },
                "response": { "type": "boolean", "example": false },
                "message": {
                  "type": "string",
                  "example": "Invalid role parameters"
                },
                "statusCode": { "type": "integer", "example": 400 },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Role name is required"
                      },
                      "field": { "type": "string", "example": "name" },
                      "location": { "type": "string", "example": "body" }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized, authentication required",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "response": { "type": "boolean", "example": false },
                "name": { "type": "string", "example": "UnauthorizedError" },
                "message": {
                  "type": "string",
                  "example": "Authentication required"
                },
                "statusCode": { "type": "integer", "example": 401 },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Invalid token"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Forbidden, insufficient permissions",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "response": { "type": "boolean", "example": false },
                "name": { "type": "string", "example": "ForbiddenError" },
                "message": {
                  "type": "string",
                  "example": "You do not have permission to create a role"
                },
                "statusCode": { "type": "integer", "example": 403 },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Access denied"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict, role already exists",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "response": { "type": "boolean", "example": false },
                "name": { "type": "string", "example": "ConflictError" },
                "message": { "type": "string", "example": "Duplicate role" },
                "statusCode": { "type": "integer", "example": 409 },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Role already exists"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "response": { "type": "boolean", "example": false },
                "name": { "type": "string", "example": "InternalServerError" },
                "message": {
                  "type": "string",
                  "example": "Internal server error"
                },
                "statusCode": { "type": "integer", "example": 500 },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Internal server error"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
